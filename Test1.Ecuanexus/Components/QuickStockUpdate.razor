@using Test1.Ecuanexus.Services
@using Test1.Ecuanexus.Client.Models
@inject ProductService ProductService
@rendermode InteractiveServer
<div class="d-flex align-items-center gap-2">
    <div class="input-group input-group-sm" style="width: 120px;">
            <input 
        type="number" 
        class="form-control form-control-sm" 
        @bind="currentStockValue"
        @bind:event="oninput"
        min="0"
        style="font-size: 0.875rem;" />
    </div>
    <button 
        class="btn btn-primary btn-sm" 
        @onclick="UpdateStock"
        disabled="@(isUpdating || currentStockValue == CurrentStock)">
        @if (isUpdating)
        {
            <span class="spinner-border spinner-border-sm me-1" role="status"></span>
            <span>Actualizando...</span>
        }
        else
        {
            <i class="fas fa-save me-1"></i>
            <span>Guardar</span>
        }
    </button>
</div>

@code {
    [Parameter]
    public int ProductId { get; set; }

    [Parameter]
    public int CurrentStock { get; set; }

    [Parameter]
    public EventCallback<(int productId, int newStock)> OnStockUpdated { get; set; }

    private int currentStockValue;
    private bool isUpdating = false;

    protected override void OnInitialized()
    {
        currentStockValue = CurrentStock;
    }

    protected override void OnParametersSet()
    {
        currentStockValue = CurrentStock;
    }

    private async Task UpdateStock()
    {
        if (isUpdating || currentStockValue == CurrentStock)
            return;

        try
        {
            isUpdating = true;
            StateHasChanged();

            // Llamar al servicio para actualizar el stock
            var request = new StockUpdateRequest { NewStock = currentStockValue };
            await ProductService.UpdateProductStockAsync(ProductId, request);

            await OnStockUpdated.InvokeAsync((ProductId, currentStockValue));
        }
        catch (Exception ex)
        {
            // Mostrar mensaje de error en la consola
            Console.WriteLine($"Error al actualizar stock: {ex.Message}");
            // Aquí podrías mostrar una notificación al usuario
        }
        finally
        {
            isUpdating = false;
            StateHasChanged();
        }
    }
}
